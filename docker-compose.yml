name: "book-service"

services:
  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.7.0
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami/zookeeper"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.4.0  # Use a stable Kafka version
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami/kafka"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "18080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper


  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  admin_app:
    build:
      context: .
      dockerfile: docker/admin/Dockerfile
    container_name: django_container
    ports:
      - "45000:45000"
    depends_on:
      - postgres_db
    env_file:
      - .env

  api_app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: fastapi_container
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - mongodb

  postgres_db:
    image: postgres:15
    container_name: postgres_container
    ports:
      - "5433:5433"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: [ "postgres", "-p", "5433" ]



volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongo_data:
  postgres_data:
